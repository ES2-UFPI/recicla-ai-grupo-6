{"ast":null,"code":"import React,{useState}from'react';import{BrowserRouter,Routes,Route,Navigate}from'react-router-dom';import'./App.css';// Nossas \"páginas\"\nimport AuthScreen from'./components/AuthScreen';import DashboardLayout from'./components/DashboardLayout';import ProdutorHome from'./components/ProdutorHome';import ColetorHome from'./components/ColetorHome';import CooperativaHome from'./components/CooperativaHome';// Definindo os tipos para nosso estado de login\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// Para testar, vamos começar com um usuário já logado!\nconst[loggedInUser,setLoggedInUser]=useState({name:'>nome< Produtor',type:'cooperativa'});const handleLogout=()=>{setLoggedInUser(null);};// Função que a tela de login vai chamar no futuro\n// const handleLogin = (user: User) => setLoggedInUser(user);\nconst renderDashboard=()=>{if(!loggedInUser)return null;let homeContent;switch(loggedInUser.type){case'produtor':homeContent=/*#__PURE__*/_jsx(ProdutorHome,{});break;case'coletor':homeContent=/*#__PURE__*/_jsx(ColetorHome,{});break;case'cooperativa':homeContent=/*#__PURE__*/_jsx(CooperativaHome,{});break;default:homeContent=/*#__PURE__*/_jsx(\"div\",{children:\"P\\xE1gina n\\xE3o encontrada\"});}return/*#__PURE__*/_jsx(DashboardLayout,{user:loggedInUser,onLogout:handleLogout,children:homeContent});};return/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:!loggedInUser?/*#__PURE__*/_jsx(AuthScreen,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:loggedInUser?renderDashboard():/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})})]})});}export default App;","map":{"version":3,"names":["React","useState","BrowserRouter","Routes","Route","Navigate","AuthScreen","DashboardLayout","ProdutorHome","ColetorHome","CooperativaHome","jsx","_jsx","jsxs","_jsxs","App","loggedInUser","setLoggedInUser","name","type","handleLogout","renderDashboard","homeContent","children","user","onLogout","path","element","to"],"sources":["C:/SSDprog/reciclaai/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\r\nimport './App.css';\r\n\r\n// Nossas \"páginas\"\r\nimport AuthScreen from './components/AuthScreen';\r\nimport DashboardLayout from './components/DashboardLayout';\r\nimport ProdutorHome from './components/ProdutorHome';\r\nimport ColetorHome from './components/ColetorHome';\r\nimport CooperativaHome from './components/CooperativaHome';\r\n\r\n// Definindo os tipos para nosso estado de login\r\ntype User = {\r\n  name: string;\r\n  type: 'produtor' | 'coletor' | 'cooperativa';\r\n};\r\n\r\nfunction App() {\r\n  // Para testar, vamos começar com um usuário já logado!\r\n  const [loggedInUser, setLoggedInUser] = useState<User | null>({ name: '>nome< Produtor', type: 'cooperativa' });\r\n  \r\n  const handleLogout = () => {\r\n    setLoggedInUser(null);\r\n  };\r\n  \r\n  // Função que a tela de login vai chamar no futuro\r\n  // const handleLogin = (user: User) => setLoggedInUser(user);\r\n\r\n  const renderDashboard = () => {\r\n    if (!loggedInUser) return null;\r\n\r\n    let homeContent;\r\n    switch (loggedInUser.type) {\r\n      case 'produtor':\r\n        homeContent = <ProdutorHome />;\r\n        break;\r\n      case 'coletor':\r\n        homeContent = <ColetorHome />;\r\n        break;\r\n      case 'cooperativa':\r\n        homeContent = <CooperativaHome />;\r\n        break;\r\n      default:\r\n        homeContent = <div>Página não encontrada</div>;\r\n    }\r\n\r\n    return (\r\n      <DashboardLayout user={loggedInUser} onLogout={handleLogout}>\r\n        {homeContent}\r\n      </DashboardLayout>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/login\" element={\r\n          !loggedInUser ? <AuthScreen /> : <Navigate to=\"/\" />\r\n        }/>\r\n        <Route path=\"/\" element={\r\n          loggedInUser ? renderDashboard() : <Navigate to=\"/login\" />\r\n        }/>\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,aAAa,CAAEC,MAAM,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CACzE,MAAO,WAAW,CAElB;AACA,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAC1D,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CACpD,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAE1D;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAMA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb;AACA,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGhB,QAAQ,CAAc,CAAEiB,IAAI,CAAE,iBAAiB,CAAEC,IAAI,CAAE,aAAc,CAAC,CAAC,CAE/G,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzBH,eAAe,CAAC,IAAI,CAAC,CACvB,CAAC,CAED;AACA;AAEA,KAAM,CAAAI,eAAe,CAAGA,CAAA,GAAM,CAC5B,GAAI,CAACL,YAAY,CAAE,MAAO,KAAI,CAE9B,GAAI,CAAAM,WAAW,CACf,OAAQN,YAAY,CAACG,IAAI,EACvB,IAAK,UAAU,CACbG,WAAW,cAAGV,IAAA,CAACJ,YAAY,GAAE,CAAC,CAC9B,MACF,IAAK,SAAS,CACZc,WAAW,cAAGV,IAAA,CAACH,WAAW,GAAE,CAAC,CAC7B,MACF,IAAK,aAAa,CAChBa,WAAW,cAAGV,IAAA,CAACF,eAAe,GAAE,CAAC,CACjC,MACF,QACEY,WAAW,cAAGV,IAAA,QAAAW,QAAA,CAAK,6BAAqB,CAAK,CAAC,CAClD,CAEA,mBACEX,IAAA,CAACL,eAAe,EAACiB,IAAI,CAAER,YAAa,CAACS,QAAQ,CAAEL,YAAa,CAAAG,QAAA,CACzDD,WAAW,CACG,CAAC,CAEtB,CAAC,CAED,mBACEV,IAAA,CAACV,aAAa,EAAAqB,QAAA,cACZT,KAAA,CAACX,MAAM,EAAAoB,QAAA,eACLX,IAAA,CAACR,KAAK,EAACsB,IAAI,CAAC,QAAQ,CAACC,OAAO,CAC1B,CAACX,YAAY,cAAGJ,IAAA,CAACN,UAAU,GAAE,CAAC,cAAGM,IAAA,CAACP,QAAQ,EAACuB,EAAE,CAAC,GAAG,CAAE,CACpD,CAAC,CAAC,cACHhB,IAAA,CAACR,KAAK,EAACsB,IAAI,CAAC,GAAG,CAACC,OAAO,CACrBX,YAAY,CAAGK,eAAe,CAAC,CAAC,cAAGT,IAAA,CAACP,QAAQ,EAACuB,EAAE,CAAC,QAAQ,CAAE,CAC3D,CAAC,CAAC,EACG,CAAC,CACI,CAAC,CAEpB,CAEA,cAAe,CAAAb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}